{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,kDAOA,MAAMC,EAAgBC,SAASC,cAAc,gBACvCC,EAAaF,SAASC,cAAc,YACpCE,EAAcH,SAASC,cAAc,cAE5BD,SAASC,cAAc,aAGtC,IAAIG,EAAc,EACdC,EAAY,EACZC,EAAc,GAClB,MAAMC,EAAyB,IAAIC,EAAAC,GAAJ,CAAmB,aAAc,CAC9DC,aAAc,MACdC,aAAc,MA8HhB,SAASC,EAAcC,GACrBX,EAAWY,mBAAmB,aAAa,EAAAC,EAAAC,cAAaH,G,EArH5C,CACZI,QAASjB,SAASC,cAAc,WAChCiB,OACEC,KAAKF,QAAQG,QAAS,C,EAExBC,OACEF,KAAKF,QAAQG,QAAS,C,EAExBE,mBACEC,OAAOD,iBAAiB,UAAU,MAChBC,OAAOC,SAAWxB,SAASyB,gBAAgBC,WACjD,IAAMP,KAAKD,OAASC,KAAKE,MAAM,IAE3CrB,SAASC,cAAc,WAAW0B,QAAU,KAC1CJ,OAAOK,SAAS,CACdC,IAAK,EACLC,KAAM,EACNC,SAAU,UACV,C,IAKFT,mBAENvB,EAAcuB,iBAAiB,UAE/B,SAAwBU,GAMtB,GALAA,EAAMC,iBA4FR,WACE/B,EAAWgC,UAAY,GACvB9B,EAAc,C,CA5Fd+B,GAEA7B,EAAc0B,EAAMI,OAAOC,SAASC,YAAYC,MAAMC,QACjDlC,EACH,OAAOT,EAAA4C,OAAOC,QAAQ,0BAGxB,EAAAC,EAAAC,aAAYtC,EAAaF,EArDV,IAsDZyC,MAAKC,IACJ,IAAKA,EAAKC,KAAKC,QAAUF,EAAKG,UAE5B,OADA9C,EAAY+C,UAAUC,IAAI,aACnBtD,EAAA4C,OAAOC,QACZ,4EAGJrC,EAAYyC,EAAKG,UACG,IAAhB7C,GACFP,EAAA4C,OAAOW,QAAQ,oBAAoB/C,aAGrCO,EAAckC,EAAKC,MACnBxC,EAAuB8C,UAGnBP,EAAKC,KAAKC,SAAWF,EAAKG,YAE5B9C,EAAY+C,UAAUC,IAAI,aAC1BtD,EAAA4C,OAAOa,QACL,+DAGAR,EAAKC,KAAKC,OAASF,EAAKG,WAC1B9C,EAAY+C,UAAUK,OAAO,YAAY,IAG5CC,OAAMC,GAAOC,QAAQC,IAAIF,I,IAG9BtD,EAAYmB,iBAAiB,SAE7BsC,iBACExD,GAAe,EACf,IACE,MAAM0C,QAAa,EAAAH,EAAAC,aAAYtC,EAAaF,EAzF/B,IA0FbQ,EAAckC,EAAKC,MACnBxC,EAAuB8C,UAEnBjD,IAAgByD,KAAKC,KAAKhB,EAAKG,UA7FtB,KA8FX9C,EAAY+C,UAAUC,IAAI,aAC1BtD,EAAA4C,OAAOa,QACL,+DAGFnD,EAAY+C,UAAUK,OAAO,Y,CAG/B,MAAOE,GACPC,QAAQC,IAAIF,E","sources":["src/01-index.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { fetchImages } from './js/pixabayAPI';\nimport { createMarkup } from './js/createCards';\nimport { smoothScroll } from './js/setScroll';\n\nconst formSearchRef = document.querySelector('.search-form');\nconst galleryRef = document.querySelector('.gallery');\nconst loadMoreRef = document.querySelector('.load-more');\n// + for infiniti scroll\nconst target = document.querySelector('.js-guard');\n\nconst PER_PAGE = 40;\nlet currentPage = 1;\nlet totalHits = 0;\nlet searchQuery = '';\nconst simpleLightBoxLightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\n// let options = {\n//   root: null,\n//   rootMargin: '300px',\n//   threshold: 1.0,\n// };\n// let observer = new IntersectionObserver(onLoadInfinitiScroll, options);\n\nconst btnUp = {\n  element: document.querySelector('.btn-up'),\n  show() {\n    this.element.hidden = false;\n  },\n  hide() {\n    this.element.hidden = true;\n  },\n  addEventListener() {\n    window.addEventListener('scroll', () => {\n      const scrollY = window.scrollY || document.documentElement.scrollTop;\n      scrollY > 500 ? this.show() : this.hide();\n    });\n    document.querySelector('.btn-up').onclick = () => {\n      window.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    };\n  },\n};\n\nbtnUp.addEventListener();\n\nformSearchRef.addEventListener('submit', onSubmitSearch);\n\nfunction onSubmitSearch(event) {\n  event.preventDefault();\n\n  resetQuery();\n\n  searchQuery = event.target.elements.searchQuery.value.trim();\n  if (!searchQuery) {\n    return Notify.failure('Enter a search string');\n  }\n\n  fetchImages(searchQuery, currentPage, PER_PAGE)\n    .then(data => {\n      if (!data.hits.length & !data.totalHits) {\n        loadMoreRef.classList.add('is-hidden');\n        return Notify.failure(\n          'Sorry, there are no images matching your search query. Please try again.'\n        );\n      }\n      totalHits = data.totalHits;\n      if (currentPage === 1) {\n        Notify.success(`Hooray! We found ${totalHits} images.`);\n      }\n\n      renderGallery(data.hits);\n      simpleLightBoxLightbox.refresh();\n      //observer.observe(target); // + for infiniti scroll\n\n      if (data.hits.length === data.totalHits) {\n        // 'zaz'\n        loadMoreRef.classList.add('is-hidden');\n        Notify.warning(\n          \"We're sorry, but you've reached the end of search results.\"\n        );\n      }\n      if (data.hits.length < data.totalHits) {\n        loadMoreRef.classList.remove('is-hidden'); //- for Btn  loadMore\n      }\n    })\n    .catch(err => console.log(err));\n}\n\nloadMoreRef.addEventListener('click', onLoad); //\n\nasync function onLoad() {\n  currentPage += 1;\n  try {\n    const data = await fetchImages(searchQuery, currentPage, PER_PAGE);\n    renderGallery(data.hits);\n    simpleLightBoxLightbox.refresh();\n\n    if (currentPage === Math.ceil(data.totalHits / PER_PAGE)) {\n      loadMoreRef.classList.add('is-hidden');\n      Notify.warning(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n    } else {\n      loadMoreRef.classList.remove('is-hidden'); // -\n    }\n    // smoothScroll(galleryRef);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n// function onLoadInfinitiScroll(entries, observer) {\n//   entries.forEach(entry => {\n//     if (entry.isIntersecting) {\n//       currentPage += 1;\n//       fetchImages(searchQuery, currentPage, PER_PAGE)\n//         .then(data => {\n//           renderGallery(data.hits);\n//           simpleLightBoxLightbox.refresh();\n//\n//           if (currentPage === Math.ceil(data.totalHits / PER_PAGE)) {\n//             loadMoreRef.classList.add('is-hidden');\n//             Notify.warning(\n//               \"We're sorry, but you've reached the end of search results.\"\n//             );\n//             observer.unobserve(target); // +\n//           } else {\n//             //loadMoreRef.classList.remove('is-hidden'); // -\n//           }\n//           smoothScroll(galleryRef);\n//         })\n//         .catch(err => console.log(err));\n//     }\n//   });\n// }\n\nfunction renderGallery(dataArr) {\n  galleryRef.insertAdjacentHTML('beforeend', createMarkup(dataArr));\n}\n\nfunction resetQuery() {\n  galleryRef.innerHTML = '';\n  currentPage = 1;\n}\n"],"names":["$iQIUW","parcelRequire","$75c9065a99106def$var$formSearchRef","document","querySelector","$75c9065a99106def$var$galleryRef","$75c9065a99106def$var$loadMoreRef","$75c9065a99106def$var$currentPage","$75c9065a99106def$var$totalHits","$75c9065a99106def$var$searchQuery","$75c9065a99106def$var$simpleLightBoxLightbox","$parcel$interopDefault","$fZKcF","captionsData","captionDelay","$75c9065a99106def$var$renderGallery","dataArr","insertAdjacentHTML","$2QAIP","createMarkup","element","show","this","hidden","hide","addEventListener","window","scrollY","documentElement","scrollTop","onclick","scrollTo","top","left","behavior","event","preventDefault","innerHTML","$75c9065a99106def$var$resetQuery","target","elements","searchQuery","value","trim","Notify","failure","$klpux","fetchImages","then","data","hits","length","totalHits","classList","add","success","refresh","warning","remove","catch","err","console","log","async","Math","ceil"],"version":3,"file":"01-hw11-pagination.bafadd77.js.map"}