{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,4EAOA,IAAMC,EAAgBC,SAASC,cAAc,gBACvCC,EAAaF,SAASC,cAAc,YACpCE,EAAcH,SAASC,cAAc,cAErCG,EAASJ,SAASC,cAAc,aAGlCI,EAAc,EACdC,EAAY,EACZC,EAAc,GACZC,EAAyB,IAAIC,EAAAC,GAAJ,CAAmB,aAAc,CAC9DC,aAAc,MACdC,aAAc,MASZC,EAAW,IAAIC,sBA8FnB,SAA8BC,EAASC,GACrCD,EAAQE,SAAQ,SAAAC,GACVA,EAAMC,gBAGRC,EAAQb,EAFRF,GAAe,EAhHJ,G,MASH,CACZgB,KAAM,KAENC,WAAY,QACZC,UAAW,I,SA4CEH,EAAQI,EAAaC,EAAaC,G,OAAlCC,EAAOC,MAAAC,KAAAC,U,UAAPH,I,OAAAA,EAAflB,EAAAZ,EAAA,CAAAY,EAAAsB,GAAAC,MAAA,SAAAC,EAAuBT,EAAaC,EAAaC,G,IAGvCQ,E,4FAAa,EAAAC,EAAAC,aAAYZ,EAAaC,EAAaC,G,UAAnDQ,EAAIG,EAAAC,KAEVC,QAAQC,IAAIf,MACPS,EAAKO,KAAKC,QAAUR,EAAKS,WAAS,C,sBACrCxC,EAAYyC,UAAUC,IAAI,a,kBACnBC,EAAAC,OAAOC,QACZ,6E,OAGJ1C,EAAY4B,EAAKS,UACG,IAAhBlB,GACFqB,EAAAC,OAAOE,QAAQ,oBAA8BC,OAAV5C,EAAU,aAG/C6C,EAAcjB,EAAKO,MACnBjC,EAAuB4C,UACvBvC,EAASwC,QAAQjD,GASb8B,EAAKO,KAAKC,OAASR,EAAKS,UAIxBlB,IAAgB6B,KAAKC,KAAKrB,EAAKS,UAAYjB,KAC7CvB,EAAYyC,UAAUC,IAAI,aAC1BC,EAAAC,OAAOS,QACL,8DAEF3C,EAAS4C,UAAUrD,I,kDAWrBmC,QAAQC,IAAGH,EAAAqB,I,2DAhDO9B,MAAAC,KAAAC,U,CA8DtB,SAASqB,EAAcQ,GACrBzD,EAAW0D,mBAAmB,aAAa,EAAAC,EAAAC,cAAaH,G,EAvG5C,CACZI,QAAS/D,SAASC,cAAc,WAChC+D,KAAA,WACEnC,KAAKkC,QAAQE,QAAS,C,EAExBC,KAAA,WACErC,KAAKkC,QAAQE,QAAS,C,EAExBE,iBAAA,W,WACEC,OAAOD,iBAAiB,UAAU,YAChBC,OAAOC,SAAWrE,SAASsE,gBAAgBC,WACjD,IAAMC,EAAKR,OAASQ,EAAKN,M,IAErClE,SAASC,cAAc,WAAWwE,QAAU,WAC1CL,OAAOM,SAAS,CACdC,IAAK,EACLC,KAAM,EACNC,SAAU,U,KAMZV,mBAENpE,EAAcoE,iBAAiB,UAE/B,SAAwBW,GAMtB,GALAA,EAAMC,iBA8ER,WACE7E,EAAW8E,UAAY,GACvB3E,EAAc,C,CA9Ed4E,KAEA1E,EAAcuE,EAAMI,OAAOC,SAASC,YAAYC,MAAMC,QAEpD,OAAOxC,EAAAC,OAAOC,QAAQ,yBAGxB5B,EAAQb,EAAaF,EAtDN,G","sources":["src/03-index.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { fetchImages } from './js/pixabayAPI';\nimport { createMarkup } from './js/createCards';\nimport { smoothScroll } from './js/setScroll';\n\nconst formSearchRef = document.querySelector('.search-form');\nconst galleryRef = document.querySelector('.gallery');\nconst loadMoreRef = document.querySelector('.load-more');\n// + for infiniti scroll\nconst target = document.querySelector('.js-guard');\n\nconst PER_PAGE = 40;\nlet currentPage = 1;\nlet totalHits = 0;\nlet searchQuery = '';\nconst simpleLightBoxLightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nlet options = {\n  root: null,\n  // 300px ->100px\n  rootMargin: '100px',\n  threshold: 1.0,\n};\nlet observer = new IntersectionObserver(onLoadInfinitiScroll, options);\n\nconst btnUp = {\n  element: document.querySelector('.btn-up'),\n  show() {\n    this.element.hidden = false;\n  },\n  hide() {\n    this.element.hidden = true;\n  },\n  addEventListener() {\n    window.addEventListener('scroll', () => {\n      const scrollY = window.scrollY || document.documentElement.scrollTop;\n      scrollY > 500 ? this.show() : this.hide();\n    });\n    document.querySelector('.btn-up').onclick = () => {\n      window.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    };\n  },\n};\n\nbtnUp.addEventListener();\n\nformSearchRef.addEventListener('submit', onSubmitSearch);\n\nfunction onSubmitSearch(event) {\n  event.preventDefault();\n\n  resetQuery();\n\n  searchQuery = event.target.elements.searchQuery.value.trim();\n  if (!searchQuery) {\n    return Notify.failure('Enter a search string');\n  }\n\n  getData(searchQuery, currentPage, PER_PAGE);\n}\n\nasync function getData(searchQuery, currentPage, PER_PAGE) {\n  //fetchImages(searchQuery, currentPage, PER_PAGE)\n  try {\n    const data = await fetchImages(searchQuery, currentPage, PER_PAGE);\n    //-.then(data => {\n    console.log(currentPage);\n    if (!data.hits.length & !data.totalHits) {\n      loadMoreRef.classList.add('is-hidden');\n      return Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n    }\n    totalHits = data.totalHits;\n    if (currentPage === 1) {\n      Notify.success(`Hooray! We found ${totalHits} images.`);\n    }\n\n    renderGallery(data.hits);\n    simpleLightBoxLightbox.refresh();\n    observer.observe(target); // + for infiniti scroll\n\n    //   if (data.hits.length === data.totalHits) {\n    //     // 'zaz'\n    //     loadMoreRef.classList.add('is-hidden');\n    //     Notify.warning(\n    //       \"We're sorry, but you've reached the end of search results.\"\n    //     );\n    //   }\n    if (data.hits.length < data.totalHits) {\n      //loadMoreRef.classList.remove('is-hidden'); //- for Btn  loadMore\n    }\n    // -2 load\n    if (currentPage === Math.ceil(data.totalHits / PER_PAGE)) {\n      loadMoreRef.classList.add('is-hidden');\n      Notify.warning(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n      observer.unobserve(target); // +\n    } else {\n      //loadMoreRef.classList.remove('is-hidden'); // -\n    }\n    //   if (currentPage > 1) {\n    //     console.log(currentPage);\n    //     smoothScroll(galleryRef);\n    //   }\n    //-})\n    //-.catch(err => console.log(err));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction onLoadInfinitiScroll(entries, observer) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n\n      getData(searchQuery, currentPage, PER_PAGE);\n    }\n  });\n}\n\nfunction renderGallery(dataArr) {\n  galleryRef.insertAdjacentHTML('beforeend', createMarkup(dataArr));\n}\n\nfunction resetQuery() {\n  galleryRef.innerHTML = '';\n  currentPage = 1;\n}\n"],"names":["$bpxeT","parcelRequire","$0b1bac888400f2fd$var$formSearchRef","document","querySelector","$0b1bac888400f2fd$var$galleryRef","$0b1bac888400f2fd$var$loadMoreRef","$0b1bac888400f2fd$var$target","$0b1bac888400f2fd$var$currentPage","$0b1bac888400f2fd$var$totalHits","$0b1bac888400f2fd$var$searchQuery","$0b1bac888400f2fd$var$simpleLightBoxLightbox","$parcel$interopDefault","$5IjG7","captionsData","captionDelay","$0b1bac888400f2fd$var$observer","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","$0b1bac888400f2fd$var$getData","root","rootMargin","threshold","searchQuery1","currentPage1","PER_PAGE1","$0b1bac888400f2fd$var$_getData","apply","this","arguments","$2TvXO","mark","_callee","data","$dmKTG","fetchImages","_ctx","sent","console","log","hits","length","totalHits","classList","add","$h6c0i","Notify","failure","success","concat","$0b1bac888400f2fd$var$renderGallery","refresh","observe","Math","ceil","warning","unobserve","t0","dataArr","insertAdjacentHTML","$8QEe8","createMarkup","element","show","hidden","hide","addEventListener","window","scrollY","documentElement","scrollTop","_this","onclick","scrollTo","top","left","behavior","event","preventDefault","innerHTML","$0b1bac888400f2fd$var$resetQuery","target","elements","searchQuery","value","trim"],"version":3,"file":"03-hw11-pagination.243808c3.js.map"}