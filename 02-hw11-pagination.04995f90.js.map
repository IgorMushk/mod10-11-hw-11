{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,oDAOMC,EAAgBC,SAASC,cAAc,gBACvCC,EAAaF,SAASC,cAAc,YACpCE,EAAcH,SAASC,cAAc,cAErCG,EAASJ,SAASC,cAAc,aAGlCI,EAAc,EACdC,EAAY,EACZC,EAAc,GACZC,EAAyB,IAAIC,EAAAC,GAAJ,CAAmB,aAAc,CAC9DC,aAAc,MACdC,aAAc,MAQZC,EAAW,IAAIC,sBA6FnB,SAA8BC,EAASC,GACrCD,EAAQE,SAAQ,SAAAC,GACVA,EAAMC,iBACRd,GAAe,GACf,EAAAe,EAAAC,aAAYd,EAAaF,EA/Gd,IAgHRiB,MAAK,SAAAC,GACJC,EAAcD,EAAKE,MACnBjB,EAAuBkB,UAEnBrB,IAAgBsB,KAAKC,KAAKL,EAAKM,UApH5B,MAqHL1B,EAAY2B,UAAUC,IAAI,aAC1BlC,EAAAmC,OAAOC,QACL,8DAEFjB,EAASkB,UAAU9B,KAIrB,EAAA+B,EAAAC,cAAalC,E,IAEdmC,OAAM,SAAAC,G,OAAOC,QAAQC,IAAIF,E,UAtHpB,CACZG,KAAM,KACNC,WAAY,QACZC,UAAW,IAwHb,SAASnB,EAAcoB,GACrB1C,EAAW2C,mBAAmB,aAAa,EAAAC,EAAAC,cAAaH,G,EArH5C,CACZI,QAAShD,SAASC,cAAc,WAChCgD,KAAA,WACEC,KAAKF,QAAQG,QAAS,C,EAExBC,KAAA,WACEF,KAAKF,QAAQG,QAAS,C,EAExBE,iBAAA,W,WACEC,OAAOD,iBAAiB,UAAU,YAChBC,OAAOC,SAAWvD,SAASwD,gBAAgBC,WACjD,IAAMC,EAAKT,OAASS,EAAKN,M,IAErCpD,SAASC,cAAc,WAAW0D,QAAU,WAC1CL,OAAOM,SAAS,CACdC,IAAK,EACLC,KAAM,EACNC,SAAU,U,KAMZV,mBAENtD,EAAcsD,iBAAiB,UAE/B,SAAwBW,GAMtB,GALAA,EAAMC,iBA4FR,WACE/D,EAAWgE,UAAY,GACvB7D,EAAc,C,CA5Fd8D,KAEA5D,EAAcyD,EAAMI,OAAOC,SAASC,YAAYC,MAAMC,QAEpD,OAAO3E,EAAAmC,OAAOyC,QAAQ,0BAGxB,EAAArD,EAAAC,aAAYd,EAAaF,EArDV,IAsDZiB,MAAK,SAAAC,GACJ,IAAKA,EAAKE,KAAKiD,QAAUnD,EAAKM,UAE5B,OADA1B,EAAY2B,UAAUC,IAAI,aACnBlC,EAAAmC,OAAOyC,QACZ,4EAGJnE,EAAYiB,EAAKM,UACG,IAAhBxB,GACFR,EAAAmC,OAAO2C,QAAQ,oBAA8BC,OAAVtE,EAAU,aAG/CkB,EAAcD,EAAKE,MACnBjB,EAAuBkB,UACvBb,EAASgE,QAAQzE,GAEbmB,EAAKE,KAAKiD,SAAWnD,EAAKM,YAE5B1B,EAAY2B,UAAUC,IAAI,aAC1BlC,EAAAmC,OAAOC,QACL,+DAGAV,EAAKE,KAAKiD,OAASnD,EAAKM,S,IAI7BQ,OAAM,SAAAC,G,OAAOC,QAAQC,IAAIF,E","sources":["src/02-index.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { fetchImages } from './js/pixabayAPI';\nimport { createMarkup } from './js/createCards';\nimport { smoothScroll } from './js/setScroll';\n\nconst formSearchRef = document.querySelector('.search-form');\nconst galleryRef = document.querySelector('.gallery');\nconst loadMoreRef = document.querySelector('.load-more');\n// + for infiniti scroll\nconst target = document.querySelector('.js-guard');\n\nconst PER_PAGE = 40;\nlet currentPage = 1;\nlet totalHits = 0;\nlet searchQuery = '';\nconst simpleLightBoxLightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nlet options = {\n  root: null,\n  rootMargin: '300px',\n  threshold: 1.0,\n};\nlet observer = new IntersectionObserver(onLoadInfinitiScroll, options);\n\nconst btnUp = {\n  element: document.querySelector('.btn-up'),\n  show() {\n    this.element.hidden = false;\n  },\n  hide() {\n    this.element.hidden = false; //true;\n  },\n  addEventListener() {\n    window.addEventListener('scroll', () => {\n      const scrollY = window.scrollY || document.documentElement.scrollTop;\n      scrollY > 500 ? this.show() : this.hide();\n    });\n    document.querySelector('.btn-up').onclick = () => {\n      window.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    };\n  },\n};\n\nbtnUp.addEventListener();\n\nformSearchRef.addEventListener('submit', onSubmitSearch);\n\nfunction onSubmitSearch(event) {\n  event.preventDefault();\n\n  resetQuery();\n\n  searchQuery = event.target.elements.searchQuery.value.trim();\n  if (!searchQuery) {\n    return Notify.failure('Enter a search string');\n  }\n\n  fetchImages(searchQuery, currentPage, PER_PAGE)\n    .then(data => {\n      if (!data.hits.length & !data.totalHits) {\n        loadMoreRef.classList.add('is-hidden');\n        return Notify.failure(\n          'Sorry, there are no images matching your search query. Please try again.'\n        );\n      }\n      totalHits = data.totalHits;\n      if (currentPage === 1) {\n        Notify.success(`Hooray! We found ${totalHits} images.`);\n      }\n\n      renderGallery(data.hits);\n      simpleLightBoxLightbox.refresh();\n      observer.observe(target); // + for infiniti scroll\n\n      if (data.hits.length === data.totalHits) {\n        // 'zaz'\n        loadMoreRef.classList.add('is-hidden');\n        Notify.warning(\n          \"We're sorry, but you've reached the end of search results.\"\n        );\n      }\n      if (data.hits.length < data.totalHits) {\n        //loadMoreRef.classList.remove('is-hidden'); //- for Btn  loadMore\n      }\n    })\n    .catch(err => console.log(err));\n}\n\n// loadMoreRef.addEventListener('click', onLoad); //\n//\n// async function onLoad() {\n//   currentPage += 1;\n//   try {\n//     const data = await fetchImages(searchQuery, currentPage, PER_PAGE);\n//     renderGallery(data.hits);\n//     simpleLightBoxLightbox.refresh();\n//\n//     if (currentPage === Math.ceil(data.totalHits / PER_PAGE)) {\n//       loadMoreRef.classList.add('is-hidden');\n//       Notify.warning(\n//         \"We're sorry, but you've reached the end of search results.\"\n//       );\n//     } else {\n//       loadMoreRef.classList.remove('is-hidden'); // -\n//     }\n//     smoothScroll(galleryRef);\n//   } catch (err) {\n//     console.log(err);\n//   }\n// }\n\nfunction onLoadInfinitiScroll(entries, observer) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      fetchImages(searchQuery, currentPage, PER_PAGE)\n        .then(data => {\n          renderGallery(data.hits);\n          simpleLightBoxLightbox.refresh();\n\n          if (currentPage === Math.ceil(data.totalHits / PER_PAGE)) {\n            loadMoreRef.classList.add('is-hidden');\n            Notify.warning(\n              \"We're sorry, but you've reached the end of search results.\"\n            );\n            observer.unobserve(target); // +\n          } else {\n            //loadMoreRef.classList.remove('is-hidden'); // -\n          }\n          smoothScroll(galleryRef);\n        })\n        .catch(err => console.log(err));\n    }\n  });\n}\n\nfunction renderGallery(dataArr) {\n  galleryRef.insertAdjacentHTML('beforeend', createMarkup(dataArr));\n}\n\nfunction resetQuery() {\n  galleryRef.innerHTML = '';\n  currentPage = 1;\n}\n"],"names":["$h6c0i","parcelRequire","$11e807edb1765eef$var$formSearchRef","document","querySelector","$11e807edb1765eef$var$galleryRef","$11e807edb1765eef$var$loadMoreRef","$11e807edb1765eef$var$target","$11e807edb1765eef$var$currentPage","$11e807edb1765eef$var$totalHits","$11e807edb1765eef$var$searchQuery","$11e807edb1765eef$var$simpleLightBoxLightbox","$parcel$interopDefault","$5IjG7","captionsData","captionDelay","$11e807edb1765eef$var$observer","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","$dmKTG","fetchImages","then","data","$11e807edb1765eef$var$renderGallery","hits","refresh","Math","ceil","totalHits","classList","add","Notify","warning","unobserve","$bsnJ6","smoothScroll","catch","err","console","log","root","rootMargin","threshold","dataArr","insertAdjacentHTML","$8QEe8","createMarkup","element","show","this","hidden","hide","addEventListener","window","scrollY","documentElement","scrollTop","_this","onclick","scrollTo","top","left","behavior","event","preventDefault","innerHTML","$11e807edb1765eef$var$resetQuery","target","elements","searchQuery","value","trim","failure","length","success","concat","observe"],"version":3,"file":"02-hw11-pagination.04995f90.js.map"}